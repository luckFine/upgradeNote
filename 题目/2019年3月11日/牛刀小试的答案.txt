1.undefined
2.in
3.undefined
4.返回1
5.1function
6.false
7.a
8.yideng
9.报错
10.

11.2
12.[1,1,1]
13.label,break:label 或 try throw catch
14.定义consooe
15.

16.true
17.

18.yidenga是undefined,yidengb是0
19.10,0
20.false,解析不一样
21.3,3
22.object,false
23.aaaaaaaaaab
24.21
25.21
26.yideng2
27.

28.undefined
29.4,3
30.

31.0??



/------2019年3月11日23:36:22再次答题


1.this指向arguments，故undefined
2.浏览器不一致，老式浏览器为in，多数现代浏览器test is not a function ,ie11,ff和chrome就是这样,极少数为out
3.x指向undefined，故undefined
4.return 1
5.1function
6.return的是一个对象，new f() === f，故false
7.Person.prototype上没有，找Object.prototype，故a
8.[0].valueof == 0，故yideng
9.没分号，return undefined，故报错
10.写成一个generator

11.报错，打印2
12.map忽略undefined，打印['1']
13.label? try...catch?

14.定义consooe，然后try...catch??

15.

16.[[[2]]].valueOf == 2，故true
17.

18.yidenga == 构造函数的length，yidengb == fn实例的形参的个数
19.this指向window，打印10 。this指向arguments，他的length是实参的个数2
20.解析时间的格式不一样
21.两个3
22.object,false
23.aaaaaaaaa
24.10+1+10 = 21
25.我认为同上
26.这又是个老式浏览器的问题
27.

28.this指向big，故undefined
29.this指向arguments，length = 实参个数4，callee.length是形参个数1
30.会warn yideng2
31.0,0





/------------错误log
3.typeof y 确实是undefined,但是是一个字符串'undefined'
8.if里转为布尔值,而且[0].valueOf也是它本身
10.??
12.map不忽略undefined,只忽略空 empty,会原样输出empty位
13.??
14.??
15.结合性,左结合1 < 2 < 3,先判断1 < 2 , 再判断true < 3
16.虽然做对了,但是[2].valueOf还是它本身,tostring才是'2'
17.??
18.虽然做对了,但是Function.length === 1
19.虽然做对了,但是new Date(2018,1,1),传入数字,中间的月从零算起
21.为什么let和var不一样??
23.maxlength只限制输入,不限制value=xxx
24.当非严格模式中的函数包含...rest,默认参数,解构赋值时,形参不会与arguments绑定
27.Math.min() === +Infinity , Math.max() === -Infinity
30.使用new Function创建的函数，其[[Environment]]引用全局词法环境，而不是包含该函数的外部词法环境
31.普通的打印是[object object],求表达式的值是{}相当于没有,+是正号,[]是'', +'',转为0

...

10[都做出来了，但是讲讲吧],
13,14,17,
21:
为什么babel转完以后不对？
	(function () {
		for (let i = (setTimeout(() => console.log('a', i)), 0); setTimeout(() => console.log('b', i)), i < 2; i++) {
			i++;
		}
	}());