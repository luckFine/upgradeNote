前端四种模式：
1.纯单页模式
vue-cli index.html+资源+假路由
2.mpa，把vue.js当做jQuery一样使用
3.mpa+swg
4.同构化

node在前端承载的是proxy机制
纯前后端分离一定要有node，可以控制路由
vue同构化，ssr
proxy代理，削减api，提升前端性能
跨端，读蓝牙，读文件
吞吐率高


reaktor hello world


正文：
异步io：
好处：
1.消除ui阻塞
2.同步下请求时间相加，异步下请求时间取最大值
3.
4.IO是昂贵的，分布式IO是更加昂贵的，
分布式：就是把多个小服务器分解项目，不同的服务器上面装不同的功能，有的负责sql，有的负责数据库，有的负责业务
分布式IO走的是网络
5.NodeJs适用于IO密集型，不适用于CPU密集型
IO密集型是一下进来500w人，CPU密集型是进来一个人，但这个人数据量大消耗很多性能

node对IO的实现：50：00


v8垃圾回收机制：
没有一种垃圾回收机制算法能胜任所有场景
和高级程序说的一样

常见内存泄漏问题
1.无限增长的数据
4.闭包










那个偏函数和柯里化有什么关联吗？



