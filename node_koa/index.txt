简介：
Koa -- 基于 Node.js 平台的下一代 web 开发框架
Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造
Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法

应用：
Koa 应用程序是一个包含一组中间件函数的对象，它是按照类似堆栈的方式组织和执行的。
一个关键的设计点是在其低级中间件层中提供高级“语法糖”。
这包括诸如内容协商，缓存清理，代理支持和重定向等常见任务的方法.

koa应用：
1.不用管返回到前端的content-type,koa自动就设置了
2.Koa 中间件以更传统的方式级联。使用 async 功能，我们可以实现 “真实” 的中间件。
3.当一个中间件调用 next()，则该函数暂停并将控制传递给定义的下一个中间件。
4.当在下游没有更多的中间件执行后，堆栈将展开并且每个中间件恢复执行其上游行为。
解释4：就是说，中间件中，next以前的代码，顺序执行，next以后的代码，逆序执行。

设置name：
如果在开发环境中，express的session插件中，会有内存泄漏



content上下文：
以前express框架是在中间件中直接就暴露了request和response。
Koa Context 将 node 的 request 和 response 对象封装到单个对象中，为编写 Web 应用程序和 API 提供了许多有用的方法。
每个 请求都将创建一个 Context，并在中间件中作为接收器引用，或者 ctx 标识符。

避免使用原生node属性：!!!!!!!!!!!!!!!!!!!!!!
绕过 Koa 的 response 处理是 不被支持的. 应避免使用以下 node 属性：
res.statusCode
res.writeHead()
res.write()
res.end()


Request 别名
Response 别名
都是方便访问的别名，可以少写个ctx.response或ctx.request


注意：
this !== ctx
ctx.res 是真正的原生的response
ctx.response是koa 的 Response 对象


response：
etag和lastModified，都是对文件进行强缓


小etg：
yo koa可能会报错
npm install 一下，就会把需要依赖的依赖项加载进去