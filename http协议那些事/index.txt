http协议：
1.http协议历史上有三个版本
2.http请求模型：
client 请求server ，server相应client
3.http是无状态协议，无法维持请求的状态，就是一次请求响应结束后，就结束了，无法维持状态，每次请求是独立的，要想再拿数据，就要再次请求。
4.http基于tcp，http3开始基于ucp
5.ip是链路层协议，ipv4是第四版
ipv6相对ipv4能提供更多的ip地址，ipv4提供的ip地址有限，
一个ipv由一个int类型组成
ipv4能提供2^32个ip
6.局域网：一种网络结构，与互联网对应，局域，就是你的内网。
7.有的路由器上有网关的功能，只负责传输数据，网关是另一个设备。


浏览器url回车发生了什么？
1.数据网址
2.浏览器不能直接发送请求，要先保证网络是通的，浏览器要先确定自己从局域网跨到互联网。在局域网，也可以做dns局域网解析。
3.浏览器不认识我输入的网址的，当浏览器到互联网上后，他会进行域名解析，解析成ip地址，dns就是用来转换网址和ip地址的，dns本身有一个很大的数据库
4.在http协议上，请求是一个大数据块，而在比tcp更底层的协议，需要把大的块转化成小的块，一个一个往外发，在发送的过程中涉及路由技术，相当于快递站，浏览器需要经过多个路由的转发
5.到达服务器以后，如果有多台服务器，需要涉及反向代理32：00
6.服务器收到请求,request动作结束，服务器进行处理，返回response
7.整合，渲染



二。什么是http协议
1.协议：就是大家要遵守的规范，有规范肯定好丫，在这之前要进行协议转换，很麻烦。
2.超文本传输协议，是一种传输协议,它约束了request和response。
3.ftp协议是文件传输协议，ssh协议是加密协议，用于远程登录



三。TCP\IP协议栈
网络协议分5层，一说4层，4、5层合并
1.应用层，为用户提供所需要的各种服务，例如：HTTP、FTP、DNS、SMTP等
2.传输层，为应用层实体提供端到端的通信功能，保证数据包的顺序传送及数据的完整性。
3.网络层，ip地址分配问题。主要解决主机到主机的通信问题。IP协议是网际互联层最重要的协议。
4.数据链路层，在物理层上传输的信号，电、光、无线电波信号
5.物理层，硬件，网线，无线电波，他是一种载体

ISO协议的七层的表示：
1.应用层
2.表示层
3.会话层
4.传输层
5.网络层
6.数据链路层
7.物理层

传输层定义了两个主要的协议：传输控制协议（TCP）和用户数据报协议（UDP).
TCP是面向连接的，他可以维持住一个连接状态，在测试连接的阶段就是握手，所以TCP握手以后就认为稳定了。类比打电话
UDP没有连接状态，他只负责发数据，想收数据必须一直监听。

各种协议的位置：
数据链路层，ip协议，tcp协议，http协议，https协议中有加密的模块



四：http的工作过程
事务：一个事务分为多个按顺序执行的步骤，如果有一个步骤失败了，整个过程就失败了。
一次http操作就是一个事务，分为四个步骤
1.客户端与服务器建立连接，tcp层次上建立连接
2.客户机发送一个请求，在http层次上，request动作
3.服务器给与响应，在http层次上，response动作
4.客户端接收信息，在tcp层次上断开连接



五：请求与响应
1.请求：请求行，报头，正文
2.响应：状态行，报头，正文
请求行：请求方法，url，协议与版本
请求报头：头字段名值对
正文：参数

状态行：协议与版本，状态码【状态码是协议的一部分】
响应报头：
正文：结果



六：请求方法
get请求和post请求的区别，get请求的请求正文是空的
rest协议：严格遵守get，post，put，delete
其他协议：
1.head协议只有响应头，没有响应正文
2.trace诊断服务器的状态
3.connect持续性连接，http代理
4.options查询服务器的性能，或者查询与资源相关的选项和需求



七：header分析
1.general:请求行，响应行
2.request header：请求报头
accept:可以接受的数据
accept-encoding：接受压缩?：
cache-control：控制缓存
connection：是否支持长连接
cookie:
referrer:检查是否同源，请求的来源，
3.form data：请求正文
4.response header：响应报头
可以自定义头
和request header对应一部分
content-type：返回的类型，以及字符集编码

response标签：响应正文


八：状态码
1xx：指示信息--表示请求已接收，继续处理
是作为异步处理的一种手段，如果后端消耗的时间比较长，可能会请求超时，超时被认为是一种错误，所以需要异步后续处理
2xx：成功--表示请求已被成功接收、理解、接受
3xx：重定向--要完成请求必须进行更进一步的操作
或许是出于服务器维护，或许是缓存，告诉浏览器从本地去找资源，或许是资源路径的修改
4xx：客户端错误--请求有语法错误或请求无法实现
5xx：服务器端错误--服务器未能实现合法的请求



九：常用的请求报头-实体报头
ppt



十：cookies与session
1.cookies:
保存在客户端的小段文本，随客户端每次发送请求，这个url下所有的cookies发送到服务器
前后端都能生成cookies
cookies的使用：
第一次访问服务器时，服务器检查没有cookies，服务器会生成一个cookies，在response的set-cookies返回到客户端，服务器会记录cookies的id
再次发送请求时，浏览器自动附加cookies到请求头上，服务器就可以检查cookies的值了
2.session:
是服务器上的一个小型的数据库，维护一些信息，用来识别客户端用户，通过唯一值sessionID来识别每一个用户
session只能服务器生成
服务器生成sessionID附加到response的set-cookies里，再次发送请求会在cookies里找sessionID字段，检查这个字段
如果我做登录，会使服务器生成session，服务器会通过sessionID来维护登录的状态，为什么要维护登录状态？因为http协议是无状态的协议

维持登录状态，还可以通过：url回显，不断变换的token

十一：缓存机制
如果是相同的URL，缓存直接使用副本响应访问请求，而不是向源服务器再次发送请求。
优点：减少相应延迟，减少带宽消耗
缓存策略：下节课

缓存流程：
1.第一次无缓存，向服务器请求
2.进行缓存协商，依靠响应头的字段进行设置
再次访问：
1.检查缓存
2.缓存过期？否：读取缓存
3.是：执行缓存策略，Etag策略优先。有时会同时使用两种策略，依然是Etag优先。
4.向服务器发送请求，服务器根据提交必要信息【请求资源相关】进行决策，判断资源是否被修改？无：304，读取缓存
5.有修改：200，进行缓存策略
6.last-modified策略，和Etag策略类似



十二：http协议分析
https:
http和https协议，是两种协议，套路是一样的，https多了一个加密
为什么要加密？因为http是明文传输，在局域网内，发送的数据会可以被截取的
密码学上有两种加密：
1.互为逆运算的对称加密
2.加密和解密手段完全不同的不对称加密
http协议自动切换成https：协议协商，问浏览器能不能支持高版本的协议

http2:
1.二进制传输，数据紧凑
2.对报头压缩，降低带宽开销
3.多路复用，充分利用带宽，用一个通路实现并发传输
4.服务器主动推送，减少请求延迟
5.默认使用加密

3:30





长连接：
一次http请求的过程是短连接过程，他会断开在tcp层面的连接，而长连接不会断开，直到没有请求了，才会断开连接
为什么要有长连接？因为建立连接和断开连接的时候要进行三次握手和四次挥手，这个对服务器的消耗很大

















